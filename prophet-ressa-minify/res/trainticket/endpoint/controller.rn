let controller = ctx.get_variable("controller").unwrap();
let endpoint_method = ctx.get_variable("endpoint_method").unwrap();
let return_type = ctx.get_variable("return_type").unwrap_or("");

let endpoint_url = ctx.get_variable("endpoint_url").unwrap();
if !endpoint_url.starts_with("/") { 
    endpoint_url = "/" + endpoint_url;
}

let method_type = ctx.get_variable("method_type").unwrap_or("");
match method_type {
    "Post" => method_type = String::from_str("POST"),
    "Get" => method_type = String::from_str("GET"),
    "Put" => method_type = String::from_str("PUT"),
    "Delete" => method_type = String::from_str("DELETE"),
    "Patch" => method_type = String::from_str("PATCH"),
    _ => method_type = method_type
}

let full_endpoint = method_type.clone();
full_endpoint.push_str(" ");
full_endpoint.push_str(endpoint_url.clone());
full_endpoint.push_str(" ");

let url_itr = endpoint_url.split("{");
let stripped_url = url_itr.next().unwrap();
for arg_part in url_itr {    
    let arg_part_itr = arg_part.split("}");
    let arg_part2 = arg_part_itr.skip(1).next().unwrap();
    stripped_url.push_str("{}");
    stripped_url.push_str(arg_part2.clone());
}

let full_path = method_type.clone() + " " + stripped_url.clone();

ctx.make_transient(full_path);
ctx.make_attribute(full_path, "Controller", Some(controller));
ctx.make_attribute(full_path, "Endpoint method", Some(endpoint_method));

full_endpoint.push_str(return_type.clone());
controller = "API - " + controller;
ctx.make_object(controller);
ctx.make_attribute(controller, endpoint_method, Some(full_endpoint));